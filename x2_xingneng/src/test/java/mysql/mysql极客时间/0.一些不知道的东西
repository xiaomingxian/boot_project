WAL(预写日志):Write-Ahead-Logging                 #https://zhuanlan.zhihu.com/p/137512843
redo-log:                                        #做崩溃恢复
    Innodb引擎特有的日志
    循环写(会覆盖[write-pos~check-point])
    物理记录(在某个数据页做了什么修改)
bin-log:
    mysql service 层的日志
    追加写(不会覆盖)
    逻辑记录(eg:给id=2的c+1)


四个隔离界别的实现
    这里需要注意的是，“读未提交”隔离级别下直接返回记录上的最新值，没有视图概念
    在“读提交”隔离级别下，这个视图是在每个 SQL 语句开始执行的时候创建的
    在“可重复读”隔离级别下，这个视图是在事务启动时创建的，整个事务存在期间都用这个视图。
    而“串行化”隔离级别下直接用加锁的方式来避免并行访问。


刷脏页对性能的影响
    redo log 满了 会刷磁盘,这时所有的更新都会阻塞，开启了redo log 的



为什么不实用平衡二叉树/或者b+树的中间层级不存数据 ：减少磁盘访问(访问数据块可能访问内存也可能访问磁盘[比较耗时])
//树跟的数据块总是在磁盘中   第二层大概率也是在内存中
//业务字段做主键的场景 KV查询  数据几乎更新操作少 减少了回表的操作